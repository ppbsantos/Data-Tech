<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_dell.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3SAAAN0gFvkv6OAAAAAmJL
        R0QAAKqNIzIAAAAHdElNRQfiCRMAKAcb3bEgAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE4LTA5LTE5VDAw
        OjQwOjA3KzAyOjAwmNOkCAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxOC0wOS0xOVQwMDo0MDowNyswMjow
        MOmOHLQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAAtklEQVQ4T2NgQAP////n
        BeJXQIwOQGK86OrhfKAkDxArALEpEL+GskF8GAaJgeRAfB4Ug4ACilBND4A0MRhkmCKy7QFAgYNAbEEk
        BqkNQDbABihwA4hfAPEBAhikBqTWBt0bCUDBBSBBaEAyA2kOKAaxwQEIUgPECRiBCRJEMuACkG0AxA1Q
        DGJfGDVgRIRBPDCuF0LjWgrIZgNiASgGsaWgcguB7HhsCUkZKPEUiAkBkBplmAEApdpg0bNq7rEAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="btn_edit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3SAAAN0gFvkv6OAAAAAmJL
        R0QAAKqNIzIAAAAHdElNRQfiCRMAJxr/Q8E2AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE4LTA5LTE5VDAw
        OjM5OjI2KzAyOjAwqa+WiAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxOC0wOS0xOVQwMDozOToyNiswMjow
        MNjyLjQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAA8UlEQVQ4T5WTzQnCQBSE
        cxILEPFmBYIFiFdjjA0IHsQeRNCL+Is3CXj1Kogd2IBVWEr8HoywCCbPwLAbmG92HptE0R9PnucttEYZ
        WqG6G8fcQXd0QRVUsxBXgOCH4FEQkpUGCD6xTtHsK2RdGBDAEzPyPglCbJzWz4AAPrCPP0Y1sXE6HniP
        sa/TYzWwcVzwDmMiuM/emrjhLeaB4IS9NfkLTgUPAK2JCz5j3KCh4JS9NSmFq5ie6IrmgocuWOYu5jHq
        oaOFqEnxycG9LgGaqKEQa2Lj/L6q8APAeENthVgTG8cHa4SXQhasNk619AcJDG/y+4b6vz8H7wAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="btn_search.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3SAAAN0gFvkv6OAAAAAmJL
        R0QAAKqNIzIAAAAHdElNRQfiCRMAJiguj6H3AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE4LTA5LTE5VDAw
        OjM4OjQwKzAyOjAw49LBCwAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxOC0wOS0xOVQwMDozODo0MCswMjow
        MJKPebcAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAA90lEQVQ4T42TywsBURSH
        vctOSUJZKBsrOwtlpVlZW0iysLCWEjsbif08LJDy+C/HdzRqXPO4U193Oud3f/ec+0gkfJ/rulU4ggO2
        N5qMXb8u8B/RCE5QVkyzxNawg1zYZENEUauQ78D+T0OwAE9IxZWJZgO9Hx2BIRhxkyWPTtoxVQPprahj
        4Jk4qoGlO9kzsFWDFRU0dE3kpFSDPsGpjsH3nqgGSRJ3nX1Ac4FK0FHWSTzCTIinYQuT0EpJ1uAKM2iC
        VFaCAbxg7i2Sj2xXLgoswYIDjOEzibEFNwi+0pob2cbgDBkdfdjbkXchLzb2+kftmbS6eANmIQNrJWKZ
        mwAAAABJRU5ErkJggg==
</value>
  </data>
</root>